plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
}

group 'com.oodj'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.7.1'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.oodj.vaccspace'
    mainClass = 'com.oodj.vaccspace.Launcher'
}

javafx {
    version = "17"
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation('io.github.palexdev:materialfx:11.12.0')
    implementation('org.kordamp.ikonli:ikonli-javafx:12.2.0')
    implementation('org.kordamp.ikonli:ikonli-fontawesome5-pack:12.2.0')

    implementation fileTree(dir: 'lib', include: '**/*.jar')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.oodj.vaccspace.Launcher'
    }
    archiveClassifier = "all"
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}